# Hey Emacs, this is a -*- sh -*- file ...
# NOTE: This file is meant to be sourced (e.g. from .bashrc or .zshrc)

# Last modified: <20251024.1032>

# Exit if not running in Zsh.
if [ -z "$ZSH_VERSION" ]; then
    printf >&2 "ERROR: This script requires Zsh. Aborting.\n"
    return 1
fi

# Set the maximum directory stack size to 10.
DIRSTACKSIZE=10
export DIRSTACKSIZE

setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS

# Define aliases for switching to specific stack entries (cd -N).
for i in {1..9}; do
  alias $i="cd -$i"
done
# '1' moves to the most recent directory.
# '2' moves to the second most recent directory.
# etc.

alias -g 21="2>&1"                      # Redirect stderr to stdout.
alias -g N='> /dev/null'                # Redirect output to null (discard).
alias -g NN='> /dev/null 2>&1'          # Redirect both stdout and stderr to null.

alias -g A='| awk'                      # Pipe output to awk.
alias -g G='| grep --color=auto -E'     # Grep with color highlighting and extended regex.
alias -g J='| jq -C .'                  # Pretty-print JSON with jq, maintaining colors.
alias -g S='| sort'                     # Sort output.
alias -g U='| uniq'                     # Filter unique lines from output.
alias -g W='| wc -l'                    # Count lines in output.
alias -g T='| tail'                     # Pipe to tail.
alias -g H='| head'                     # Pipe to head.

# Count and sort unique items with frequencies.
alias -g CS='sort | uniq -c | sort -k1,1nr'

alias -g CA="| cat -A"                  # Display line endings and tab characters (cat -A).
alias -g F='| fmt -'                    # Format output to fit within a specific width.
alias -g L="| less"                     # Pipe to less for paginated viewing.

alias -g BG='& exit'                    # Send process to background and exit shell.

alias -g X='| xargs'                    # Pipe args to a target command.
alias -g X0='| tr "\n" "\0" | xargs -0' # Null-separated input (safe for spaces/newlines).
alias -g X1='| xargs -n 1'              # One arg per call.
alias -g XR='| xargs -r'                # Run only if input is non-empty.

alias -g Map="| tr '\n' '\0' | xargs -0 -n 1"

# Field extractors.
for i in {1..9}; do
    alias -g "A$i"="| awk '{print \$$i}'"
done

for i in {1..9}; do
    alias -g ",$i"="| awk -F, '{print \$$i}'"
done

for i in {1..9}; do
    alias -g "S$i"="| awk -F';' '{print \$$i}'"
done

for i in {1..9}; do
    alias -g ":$i"="| awk -F: '{print \$$i}'"
done

for i in {1..9}; do
    alias -g "T$i"="| awk -F \$'\\t' '{print \$$i}'"
done

# M-S-l: Send the string 'ls' followed by a newline.
bindkey -s '\eL' 'ls\n'

# C-M-u: Move to parent directory.
up-directory() {
  local count=${1:-1}
  while (( count > 0 )); do
      cd ..
      ((count--))
  done
  zle reset-prompt
}
zle -N up-directory
bindkey '\e\C-u' up-directory

# M-s: Prepend sudo.
prepend-sudo() {
  # If the buffer is empty, recall the previous command from history.
  [[ -z $BUFFER ]] && zle up-history
  # Only prepend 'sudo' if it's not already at the start.
  if [[ $LBUFFER != sudo* ]]; then
    LBUFFER="sudo $LBUFFER"
  fi
  zle reset-prompt
}
zle -N prepend-sudo
bindkey "\es" prepend-sudo

bindkey '^x^d' copy-prev-word
# Instead of C-M-_.

# Load the edit-command-line function.
autoload -U edit-command-line
zle -N edit-command-line

# Bind C-x C-e to open the command line in an external editor.
bindkey '^x^e' edit-command-line

# Set a common history file.
HISTFILE=$HOME/.zsh_history

# Set the number of history entries to save to the (on-disk history) file.
SAVEHIST=20000

# Share history between all running sessions.
setopt SHARE_HISTORY

# Append commands to the history file incrementally, instead of overwriting the
# history file when the shell exits.
setopt INC_APPEND_HISTORY

# Append to the history file instead of overwriting it.
setopt APPEND_HISTORY

setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST

# Show full command history without line numbers.
alias history="history 0"
